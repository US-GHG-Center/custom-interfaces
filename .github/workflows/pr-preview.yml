name: PR preview

on:
  pull_request:
    types: [opened, synchronize, closed]
    paths:
      - 'emit-ch4plume-v1/**'
      - 'noaa-cpfp-point/**'

jobs:
  build_and_deploy:
    if: ${{ github.event.action != 'closed' }}
    environment: development
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
      pull-requests: write

    env:
      S3_BUCKET: ghgc-custom-interfaces-develop
      PR_NUMBER: ${{ github.event.number }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/setup-node@v3
        with:
          node-version: 'v20.9.0'

      - name: Determine changed files
        id: changes
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }} --depth=1
          git diff --name-only origin/${{ github.event.pull_request.base.ref }} > changed_files.txt

          # Initialize CHANGED_WEBSITES as an empty array
          CHANGED_WEBSITES=()

          # Check for changed folders and add them to the array
          if grep -q 'emit-ch4plume-v1/' changed_files.txt; then
            CHANGED_WEBSITES+=('emit-ch4plume-v1')
          fi
          if grep -q 'noaa-cpfp-point/' changed_files.txt; then
            CHANGED_WEBSITES+=('noaa-cpfp-point')
          fi
          echo "CHANGED_WEBSITES=${CHANGED_WEBSITES}" >> $GITHUB_ENV

      - name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.DEPLOYMENT_ROLE_ARN }}
          role-session-name: ${{ github.repository_owner}}
          aws-region: us-west-2

      - name: Build and deploy
        run: |
          WEBSITES=(${{ env.CHANGED_WEBSITES }})
          COMMENT="### ✅ Deploy Preview for *custom-interfaces* is ready! \n \n"
          for WEBSITE in "${WEBSITES[@]}"; do
            if [ "$WEBSITE" == "emit-ch4plume-v1" ]; then
              echo MAP_STYLE="${{ vars.MAP_STYLE }}" >> ./emit-ch4plume-v1/.env
              echo MAP_ACCESS_TOKEN="${{ secrets.MAP_ACCESS_TOKEN }}" >> ./emit-ch4plume-v1/.env
              echo PUBLIC_URL="${{ vars.PUBLIC_URL_EMIT }}/${{ env.PR_NUMBER }}" >> ./emit-ch4plume-v1/.env
              echo STAGE="production" >> ./emit-ch4plume-v1/.env
              cd ./emit-ch4plume-v1
              npm install
              npm run deploy
              cd ..
              aws s3 sync emit-ch4plume-v1/dist s3://${{ env.S3_BUCKET }}${{ vars.PUBLIC_URL_EMIT }}/${{ env.PR_NUMBER }}/
              COMMENT+="- 🛰️ emit-ch4plume-v1: https://${{ env.S3_BUCKET }}.s3.us-west-2.amazonaws.com${{ vars.PUBLIC_URL_EMIT }}/${{ env.PR_NUMBER }}/index.html"
            elif [ "$WEBSITE" == "noaa-cpfp-point" ]; then
              echo PUBLIC_URL="${{ vars.PUBLIC_URL_NOAA }}/${{ env.PR_NUMBER }}" >> ./noaa-cpfp-point/.env
              echo MAPBOX_ACCESS_TOKEN="${{ secrets.MAP_ACCESS_TOKEN }}" >> ./noaa-cpfp-point/.env
              cd ./noaa-cpfp-point
              npm install
              npm run production
              cd ..
              aws s3 sync noaa-cpfp-point/dist s3://${{ env.S3_BUCKET }}${{ vars.PUBLIC_URL_NOAA }}/${{ env.PR_NUMBER }}/
              COMMENT+="- 🗼 noaa-cpfp-point: https://${{ env.S3_BUCKET }}.s3.us-west-2.amazonaws.com${{ vars.PUBLIC_URL_NOAA }}/${{ env.PR_NUMBER }}/index.html"
            fi
            echo "COMMENT=${COMMENT}" >> $GITHUB_ENV
          done

      - name: Add/update PR comment
        id: find-comment
        run: |
          COMMENTS_URL="https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
          COMMENTS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" $COMMENTS_URL)
          COMMENT_ID=$(echo $COMMENTS | jq -r '.[] | select(.user.login == "github-actions[bot]") | .id')
          if [ -z "$COMMENT_ID" ]; then
            curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -X POST -d "{\"body\":\"${{ env.COMMENT }}\"}" "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
          else
            curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -X PATCH -d "{\"body\":\"${{ env.COMMENT }}\"}" "https://api.github.com/repos/${{ github.repository }}/issues/comments/$COMMENT_ID"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  delete_s3_content:
    if: ${{ github.event.action == 'closed' }}
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    env:
      S3_BUCKET: ghgc-custom-interfaces-develop
      PR_NUMBER: ${{ github.event.number }}

    steps:
      - name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.DEPLOYMENT_ROLE_ARN }}
          role-session-name: ${{ github.repository_owner }}
          aws-region: us-west-2

      - name: Delete built websites from S3
        run: |
          aws s3 rm s3://${{ env.S3_BUCKET }}${{ vars.PUBLIC_URL_EMIT }}/${{ env.PR_NUMBER }}/ --recursive
          aws s3 rm s3://${{ env.S3_BUCKET }}${{ vars.PUBLIC_URL_NOAA }}/${{ env.PR_NUMBER }}/ --recursive
