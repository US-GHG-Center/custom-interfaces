name: Build and Deploy EMIT

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - dev
      - production

env:
  MAP_STYLE: ${{ secrets.MAP_STYLE }}
  MAP_ACCESS_TOKEN: ${{ secrets.MAP_ACCESS_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency: ci-${{ github.ref }}

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
        with:
          sparse-checkout: 'emit-ch4plume-v1/'
          sparse-checkout-cone-mode: false

      - name: Cache dist folder
        uses: actions/cache@v2
        with:
          path: |
            ./emit-ch4plume-v1/dist
          key: ${{ runner.os }}-build-${{ hashFiles('./emit-ch4plume-v1/package-lock.json') }}

      - name: Update Data üìä
        working-directory: ./emit-ch4plume-v1
        run: |
          mkdir ./data
          node update_data.js

      - name: Build for production üîß
        working-directory: ./emit-ch4plume-v1
        run: |
          echo MAP_STYLE="${MAP_STYLE}" > .env
          echo MAP_ACCESS_TOKEN="${MAP_ACCESS_TOKEN}" >> .env
          npm ci
          npm run production
          cp index.html dist
          cp -r data dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - env_name: develop
            branch: dev
            aws_account_id: ${{ secrets.AWS_DEV_ACCOUNT_ID }}
          - env_name: staging
            branch: main
            aws_account_id: ${{ secrets.AWS_STAGING_ACCOUNT_ID }}
          - env_name: production
            branch: production
            aws_account_id: ${{ secrets.AWS_PRODUCTION_ACCOUNT_ID }}

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
        with:
          sparse-checkout: 'emit-ch4plume-v1/'
          sparse-checkout-cone-mode: false

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::${{ matrix.aws_account_id }}:role/ghgc-dashboard-role"
          role-session-name: ${{ github.repository_owner }}
          aws-region: us-west-2

      - name: Restore dist folder from cache
        uses: actions/cache@v2
        with:
          path: |
            ./emit-ch4plume-v1/dist
          key: ${{ runner.os }}-build-${{ hashFiles('./emit-ch4plume-v1/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Upload to S3
        run: |
          aws s3 cp "./emit-ch4plume-v1/dist" "s3://ghgc-dashboard-${{ matrix.env_name }}/custom-interfaces/emit-ch4plume-v1/" --recursive
